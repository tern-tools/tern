# Copyright (c) 2019 VMware, Inc. All Rights Reserved.
# SPDX-License-Identifier: BSD-2-Clause

version: 2.1

# set up executor
executors:
  ubuntu1604:
    machine:
      image: ubuntu-1604:201903-01

commands:
  setup:
    steps:
      - run: |
         sudo rm /etc/apt/sources.list
         echo "deb http://ubuntu.mirror.constant.com/ xenial main" | sudo tee -a /etc/apt/sources.list
         echo "deb-src http://ubuntu.mirror.constant.com/ xenial main" | sudo tee -a /etc/apt/sources.list
         sudo apt-get update
      - run: sudo apt-get install -y attr
      - checkout
      - run: pyenv global 3.6.5
      - run: pip install --upgrade pip

jobs:
  # linting using Prospector
  linting:
    executor: ubuntu1604
    # steps to run Prospector
    steps:
      - setup
      - run: pip install prospector>=1.2 GitPython~=2.1
      - run: pip install .
      - run: c=`python ci/evaluate_docs.py`; if [ -z $c ]; then echo "No .py files to lint"; else echo $c | xargs prospector; fi
  # security linting using Bandit
  security:
    executor: ubuntu1604
    # steps to run Bandit
    steps:
      - setup
      - run: pip install bandit~=1.6 GitPython~=2.1
      - run: c=`python ci/evaluate_docs.py`; if [ -z $c ]; then echo "No .py files to lint"; else echo $c | xargs bandit; fi
  # linting for PR commit messages
  commit_check:
    executor: ubuntu1604
    # Steps to run commit message linting
    steps:
      - setup
      - run: pip install GitPython~=2.1
      - run: python ci/test_commit_message.py
  test_changes:
    executor: ubuntu1604
    # Steps to run tests on files changed
    steps:
      - setup
      - run: pip install GitPython~=2.1
      - run: pip install .
      - run: python ci/test_files_touched.py
  # full functional test for photonOS
  funcphoton:
    executor: ubuntu1604
    # checkout the code and set up the environment
    steps:
      - setup
      - run: pip install .
      - run: tern -l report -i photon:3.0
  test_coverage:
    executor: ubuntu1604
    steps:
      - setup
      - run: pip install coverage
      - run: pip install .
      - run: coverage run -m unittest discover -s tests
      - run: coverage report


workflows:
  version: 2
  PRs:
    jobs:
      - linting
      - commit_check
      - security
      - test_changes
      - test_coverage

